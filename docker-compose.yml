version: '3.4'

services:
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: monitoring_nodeexporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
      
  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: monitoring_prometheus
    ports:
      - 5430:9090
    networks:
      - my-network 
    restart: always   
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
      
  grafana:
    image: grafana/grafana:9.5.2
    container_name: monitoring_grafana
    ports:
      - 8000:3000
    extra_hosts:
      - "host.docker.internal:host-gateway"   
    networks:
      - my-network 
    restart: unless-stopped
    volumes:
      - ./grafana/etcs:/etc/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  mail:
    image: bytemark/smtp
    container_name: monitoring_mail
    networks:
      - my-network 
    environment:
      RELAY_HOST: in-v3.mailjet.com
      RELAY_PORT: 587
      RELAY_USERNAME: ${RELAY_USERNAME}
      RELAY_PASSWORD: ${RELAY_PASSWORD}
    restart: always 

  pihole:
    image: ekofr/pihole-exporter:v0.4.0
    container_name: monitoring_pihole
    environment:
      - PIHOLE_API_TOKEN=$PIHOLE_API_TOKEN
      - PIHOLE_HOSTNAME=$PIHOLE_HOSTNAME
      - PORT=9617
    networks:
      - my-network
    restart: unless-stopped  
    ports:
      - 9617:9617
      
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: monitoring_blackbox
    hostname: "blackbox"
    networks:
      - my-network
    ports:
    - 9115:9115
    restart: always
    volumes:
    - "./config/blackbox-exporter/blackbox-exporter.yml:/etc/prometheus/blackbox-exporter.yml"
    command:
    - "--config.file=/etc/prometheus/blackbox-exporter.yml"
    
  yacht:
    image: selfhostedpro/yacht
    container_name: monitoring_yacht
    ports:
      - 80:8000
    networks:
      - my-network  
    restart: unless-stopped
    volumes:
      - yacht:/config
      - /var/run/docker.sock:/var/run/docker.sock
    
volumes:
  prometheus_data:
  grafana:
  yacht:

networks:
  my-network:
    external: true
    

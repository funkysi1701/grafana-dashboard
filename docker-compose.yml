version: '3.4'

services:
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: monitoring_nodeexporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
      
  prometheus-prod:
    image: prom/prometheus:v2.44.0
    container_name: monitoring_prometheus_prod
    ports:
      - 5430:9090
    networks:
      - my-network 
    restart: always   
    volumes:
      - ./prometheus_prod/:/etc/prometheus/
      - prometheus_data_prod:/prometheus

  prometheus-dev:
    image: prom/prometheus:v2.44.0
    container_name: monitoring_prometheus_dev
    ports:
      - 5431:9090
    networks:
      - my-network 
    restart: always   
    volumes:
      - ./prometheus_dev/:/etc/prometheus/
      - prometheus_data_dev:/prometheus      
      
  grafana:
    image: grafana/grafana:9.5.3
    container_name: monitoring_grafana
    ports:
      - 8000:3000
    extra_hosts:
      - "host.docker.internal:host-gateway"   
    networks:
      - my-network 
    restart: unless-stopped
    volumes:
      - ./grafana/etcs:/etc/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  mail:
    image: bytemark/smtp
    container_name: monitoring_mail
    networks:
      - my-network 
    environment:
      RELAY_HOST: in-v3.mailjet.com
      RELAY_PORT: 587
      RELAY_USERNAME: 
      RELAY_PASSWORD: 
    restart: always 

  pihole:
    image: ekofr/pihole-exporter:v0.4.0
    container_name: monitoring_pihole
    environment:
      - PIHOLE_API_TOKEN
      - PIHOLE_HOSTNAME
      - PORT=9617
    networks:
      - my-network
    restart: unless-stopped  
    ports:
      - 9617:9617
      
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: monitoring_blackbox
    hostname: "blackbox"
    networks:
      - my-network
    ports:
    - 9115:9115
    restart: always
    volumes:
    - "./config/blackbox-exporter/blackbox-exporter.yml:/etc/prometheus/blackbox-exporter.yml"
    command:
    - "--config.file=/etc/prometheus/blackbox-exporter.yml"
    
  yacht:
    image: selfhostedpro/yacht
    container_name: monitoring_yacht
    ports:
      - 8085:8000
    networks:
      - my-network  
    restart: unless-stopped
    volumes:
      - yacht:/config
      - /var/run/docker.sock:/var/run/docker.sock

  telegraf:
    image: telegraf
    container_name: monitoring_telegraf
    restart: always
    volumes:
    - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '8125:8125'    

  influxdb:
    image: influxdb:1.8-alpine
    container_name: monitoring_influxdb
    restart: always
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    ports:
      - '8086:8086'
    volumes:
      - influxdb_data:/var/lib/influxdb   

  dnsrobocert:
    image: adferrand/dnsrobocert
    container_name: monitoring_dnsrobocert
    volumes:
    - ./dnsrobocert/config.yml:/etc/dnsrobocert/config.yml
    - /etc/letsencrypt:/etc/letsencrypt
    - /etc/dnsrobocert:/etc/dnsrobocert
    restart: always

  nginx:
    container_name: monitoring_nginx
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    ports:
        - 80:80
        - 443:443
    volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - /var/docker/nginx/html:/usr/share/nginx/html
        - /etc/letsencrypt/live/helloworld2.funkysi1701.com:/etc/nginx/certs
        - /var/docker/nginx/vhost:/etc/nginx/vhost.d
    logging:
        options:
            max-size: "10m"
            max-file: "3"

  hello-world:
    container_name: monitoring_helloworld
    image: kornkitti/express-hello-world
    expose:
        - "8080"
    environment:
        VIRTUAL_HOST: helloworld2.funkysi1701.com
        LETSENCRYPT_HOST: helloworld2.funkysi1701.com     

volumes:
  prometheus_data_dev:
  prometheus_data_prod:
  grafana:
  yacht:
  influxdb_data:

networks:
  my-network:
    external: true
